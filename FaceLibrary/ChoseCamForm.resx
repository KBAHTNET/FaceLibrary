<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ChoseCamFormStyle.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAABgAAAAfAAAAIAAAACAAAAAgAAAAIAAA
        ACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAAB8AAAAZAAAABwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQwMDGQfHx/RJSUl9yYmJvwmJib8JiYm/CYm
        JvwmJib8JiYm/CYmJvwmJib8JiYm/CYmJvwmJib8JiYm/CYmJvwmJib8JiYm/CYmJvwmJib8JiYm/CYm
        JvghISHXEhIScQAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMSEhKYKCgo/igoKP8oKCj/KCgo/ygo
        KP8oKCj/KCgo/ygoKP8oKCj/KSkp/yoqKv8qKir/Kioq/yoqKv8pKSn/KCgo/ygoKP8oKCj/KCgo/ygo
        KP8oKCj/KCgo/ygoKP8pKSn+FxcXqwAAAAcAAAAAAAAAAAAAAAAAAAAACAgIWCYmJv4nJyf/Jycn/ycn
        J/8nJyf/Jycn/ycnJ/8nJyf/KSkp/ywsLP8sLCz/Kysr/ykpKf8pKSn/Kioq/ysrK/8sLCz/Kioq/ygo
        KP8nJyf/Jycn/ycnJ/8nJyf/Jycn/ycnJ/8oKCj/EBAQbwAAAAAAAAAAAAAAAAAAAAEaGhrBJiYm/yYm
        Jv8mJib/JiYm/yYmJv8mJib/KCgo/ysrK/8pKSn/IiIi/xsbG/8XFxf/FRUV/xUVFf8WFhb/Ghoa/yAg
        IP8oKCj/Kysr/ygoKP8mJib/JiYm/yYmJv8mJib/JiYm/yYmJv8dHR3WAAAABAAAAAAAAAAAAAAABx0d
        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
        N/+RkZH/mpqa/yIiIv8nJyf/KSkp/zIyMv84ODj/Li4u/ykpKP8pKSj/Li4t/zg4OP8yMjL/KSkp/ygo
        KP8fHx//YGBg/46Ojv83Nzf/MzMz/zIyMv8yMjL/LCws/wAAABcAAAAAAAAAAAAAAAgrKyvwNjc3/zc3
        N/82Njb/ODg4/1JSUv/Gxsb/Y2Nj/yUlJf8xMTH/MzMz/zQ0NP85OTn/PDw8/z09Pf85OTn/NTU1/zMz
        M/8yMjL/KCgo/zw8PP+NjY3/Y2Nj/zo6Ov83Nzf/Nzc3/zc3N/8wMDD/AAAAGAAAAAAAAAAAAAAACC4u
        LvA7Ozv/Ozs7/zs7O/87Ozv/Pz8//4uLi//IyMj/Wlpa/ysrK/81NTX/PT09/z4+Pv8+Pj7/Pj4+/z4+
        Pv8+Pj7/ODg4/y0tLf88PDz/fn5+/4SEhP8/Pz//PDw8/zs7O/87Ozv/Ozs7/zU1Nf8AAAAYAAAAAAAA
        AAAAAAAIMzMz8EBAQP9AQUH/QEBA/0BAQP9AQED/Q0ND/6urq//l5eX/gYGB/zY2Nv8yMjL/ODg4/zs7
        O/88PDz/OTk5/zMzM/8xMTH/V1dX/4uLi/+SkpL/SkpK/0FBQf9AQED/QEBA/0BAQP9AQED/OTk5/wAA
        ABkAAAAAAAAAAAAAAAg2NjbwRUVF/0VFRf9FRUX/RUVF/0VFRf9FRUX/RkZG/5qamv/19fX/xcXF/3p6
        ev9cXFz/TExM/0lJSf9YWFj/aGho/4uLi/+fn5//j4+P/01NTf9GRkb/RUVF/0VFRf9FRUX/RUVF/0VF
        Rf89PT3/AAAAGQAAAAAAAAAAAAAACDo6OvBKSkr/SkpK/0pKSv9KSkr/SkpK/0pKSv9KSkr/SkpK/2Bg
        YP+tra3/1dXV/7W1tf+lpaX/n5+f/6Ojo//Ly8v/nZ2d/2tra/9JSUn/SkpK/0pKSv9KSkr/SkpK/0pK
        Sv9KSkr/SkpK/0BAQP8AAAAZAAAAAAAAAAAAAAAFPj4+6E1NTf9NTU3/TU1N/01NTf9NTU3/TU1N/01N
        Tf9NTU3/TU1N/05OTv9MTEz/ampq/3d3d/94eHj/bm5u/1JSUv9NTU3/TU1N/01NTf9NTU3/TU1N/01N
        Tf9NTU3/TU1N/01NTf9NTU3/QkJC/AAAABEAAAAAAAAAAAAAAAA8PDy2UVFR/1FRUf9RUVH/UVFR/1FR
        Uf9RUVH/UVFR/1FRUf9RUVH/UVFR/1FRUf9RUVH/UVFR/1FRUf9RUVH/UVFR/1FRUf9RUVH/UVFR/1FR
        Uf9RUVH/UVFR/1FRUf9RUVH/UVFR/1FRUf8/Pz/UAAAAAgAAAAAAAAAAAAAAABMTE0NWVlb9U1NT/1NT
        U/9TU1P/U1NT/1NTU/9TU1P/U1NT/1NUU/9TU1P/U1NT/1NTU/9TU1P/U1NT/1NTU/9TU1P/U1RU/1NT
        U/9TU1P/U1NT/1NTU/9TU1P/U1NT/1NTU/9TU1P/WFhY/yEhIWIAAAAAAAAAAAAAAAAAAAAAAAAAACoq
        KndYWFj9VFVU/1NTU/9TU1P/U1NT/1NTU/9TU1P/VFNT/1NTU/9TU1P/U1NT/1NTU/9TU1P/U1NT/1NT
        U/9TU1P/U1NT/1NTU/9TU1P/U1NT/1NTU/9TU1P/VFRU/1lZWf4xMTGUAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABMTE0BFRUWxSUlJ6ElJSfJJSUnySUlJ8klJSfJJSUnySUlJ8klJSfJJSUnySUlJ8klJ
        SfJJSUnySUlJ8klJSfJJSUnySUlJ8klJSfJJSUnySUlJ8klJSetGRka7HBwcUAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAA
        AAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////gAAB/gAAAHwAAAA8AAAAOAAAABgAAAAYAAAAGAAAABgAAAAYAA
        AAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAA
        AAHAAAABwAAAA+AAAAPwAAAH/AAAP/////8=
</value>
  </data>
</root>